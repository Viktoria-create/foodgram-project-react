version: '3.8'

services:
  frontend:
    build:
      context: /home/user/project/frontend
      dockerfile: Dockerfile
    volumes:
    #  - ../frontend/:/app/result_build/
      - ./frontend:/app

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      #- ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      #- static_value:/var/html/static/:rw
      #- media_value:/var/html/media/:rw
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - web
      - frontend

  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgresql_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h ${DB_HOST} -p ${DB_PORT} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: /home/user/project/backend 
      dockerfile: Dockerfile
      args:
        - SECRET_KEY
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
      - ../data/:/data/
      - ../backend/:/app/
    ports:
     - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env

volumes:
  postgresql_volume:
  static_value:
  media_value:
